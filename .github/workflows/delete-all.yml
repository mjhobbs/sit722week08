# week08/.github/workflows/frontend-cd.yml

name: Delete All Services from AKS

# This workflow can be called by other workflows and takes inputs.
# Or it can be run manually if you provide the IPs.
on:
  workflow_dispatch:
    inputs:
      aks_cluster_name:
        description: 'Name of the AKS Cluster to deploy to'
        required: true
        default: '<aks_name>'
      aks_resource_group:
        description: 'Resource Group of the AKS Cluster'
        required: true
        default: '<<resource_group_name>'

  workflow_call:
    inputs:
      aks_cluster_name:
        required: true
        type: string
      aks_resource_group:
        required: true
        type: string

jobs:
  delete_frontend:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Azure login using a Service Principal secret
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Login to Azure Container Registry (ACR)
      - name: Login to Azure Container Registry
        run: az acr login --name ${{ secrets.ACR_LOGIN_SERVER }}

      - name: Set Kubernetes context (get AKS credentials)
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ inputs.aks_resource_group }}
          cluster-name: ${{ inputs.aks_cluster_name }}

      - name: Delete Frontend to AKS
        run: |
          echo "Delete frontend from AKS cluster: ${{ inputs.aks_cluster_name }}"
          cd k8s/
          # Ensure frontend-service.yaml is configured with your ACR
          kubectl delete -f frontend.yaml
          kubectl delete -f product-service.yaml
          kubectl delete -f order-service.yaml
          kubectl delete -f product-db.yaml
          kubectl delete -f order-db.yaml
          kubectl delete -f secrets.yaml
          kubectl delete -f configmaps.yaml

      - name: Logout from Azure (AKS deployment)
        run: az logout
